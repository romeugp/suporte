@model ProjetoSuporte.Models.BuscaChamado
@{
    ViewBag.Title = "AcompanhaChamado";
    Layout = "~/_SiteLayout.cshtml";

    ProjetoSuporte.Models.Mchamado chamado = new ProjetoSuporte.Models.Mchamado();
    DadosSuporte dados = new DadosSuporte();

}
<html>
<head>
    <link href="~/Content/Acompanha.css" rel="stylesheet" />
</head>
<body>
    

    <h2 id="Acompanha">AcompanhaChamado</h2>
    <nav id="menu">
        <ul id="menu">
            <li id="menu">@Html.Action("Menu", "AbreChamado")</li>
        </ul>
    </nav>
    @using (Html.BeginForm("AcompanhaChamado", "AbreChamado", null, FormMethod.Post))
    {
        <fieldset id="dados">
            <div id="filtros">
                <ul>
                    <li id="nchamado">
                       
                            @Html.LabelFor(model => Model.nchamado)
                            @Html.TextBoxFor(model => Model.nchamado, new { style = "  text-align:center; margin-top:0px;width:75px; height:20px; ", @placeholder = "n° os" })
                       
                    </li>
                    <li id="status">

                        @Html.LabelFor(model => Model.status)
                        @Html.DropDownListFor(model => Model.status, new List<SelectListItem> {
                     new SelectListItem {Text = "Selecione",Value = "0" },
                     new SelectListItem { Text = "Aberto", Value = "1" },
                     new SelectListItem {Text = "Fechado",Value = "2" },
                     new SelectListItem {Text = "Andamento",Value = "3" }
                     }, new { style = "  width:100px; height:23px; " })

                    </li>

                    <li>  &nbsp;&nbsp;

                    <li id="mes">

                        @Html.LabelFor(model => Model.mes)
                        @Html.DropDownListFor(model => Model.mes, new List<SelectListItem> {
             new SelectListItem {Text = "Selecione",Value = "0" },
             new SelectListItem {Text = "Janeiro",Value = "1" },
             new SelectListItem { Text = "Fevereiro", Value = "2" },
             new SelectListItem {Text = "Março",Value = "3" },
             new SelectListItem {Text = "Abril",Value = "4" },
             new SelectListItem { Text = "Maio", Value = "5" },
             new SelectListItem {Text = "Junho",Value = "6" },
             new SelectListItem {Text = "Julho",Value = "7" },
             new SelectListItem { Text = "Agosto", Value = "8" },
             new SelectListItem {Text = "Setembro",Value = "9" },
             new SelectListItem {Text = "Outubro",Value = "10" },
             new SelectListItem { Text = "Novembro", Value = "11" },
             new SelectListItem {Text = "Dezembro",Value = "12" }

             }, new { style = "  width:84px; height:23px; " })

                    </li>
                    <li id="ano">

                        @Html.LabelFor(model => Model.ano)
                        @Html.TextBoxFor(model => Model.ano, new { style = "  text-align:center;margin:0px; width:75px; height:20px; ", @placeholder = "Ano" })

                    </li>

                    <li id="FIltrar">

                        <input type="submit" id="filtro" value="Filtrar" />

                    </li>
                </ul>
            </div>

            <fieldset>

                @{
                    //Filtros
                    int id = Convert.ToInt32(Session["id"]);

                    //busca os 200 primeiros
                    if ((Model.status == 0) && (Model.ano == 0) && (Model.mes == 0) && (Model.nchamado == 0))
                    {

                        var grid = new WebGrid(source: chamado.Q200(),

                                               rowsPerPage: 15,
                                               canPage: true,
                                               canSort: true,
                                               defaultSort: "os_situacao",
                                               fieldNamePrefix: "gridItens_",
                                               pageFieldName: "inside",
                                               selectionFieldName: "selectedRow"

                                               );


                        @grid.GetHtml(
tableStyle: "webgrid",
rowStyle: "row",
headerStyle: "head",
alternatingRowStyle: "alt",
columns: grid.Columns(
grid.Column("NChamado", header: "Nº Chamado"),
grid.Column("Situacao", header: "Situação"),
grid.Column("Escolha", header: "Problema"),
grid.Column("Detalhe", header: "Detalhes do problema"),
grid.Column("DataA", header: "Data de abertura"),
grid.Column("DataF", header: "Data de fechamento"),
grid.Column(format: (item) =>
                    Html.ActionLink("Detalhes", "detalhes",
                    new { NChamado = item.NChamado })
         )
)

                   )
                    }
                    //busca sómente pelo numero do chamado
                    else if ((Model.nchamado != 0) && (Model.status == 0) && (Model.dia == 0) && (Model.ano == 0) && (Model.mes == 0))
                    {

                        WebGrid grid = new WebGrid(source: chamado.QNChamado(Model.nchamado),
                                               rowsPerPage: 2
                                               );

                        @grid.GetHtml(
                          tableStyle: "webgrid",
                          headerStyle: "head",
                          alternatingRowStyle: "alt",
                         columns: grid.Columns(
                             grid.Column("NChamado", header: "Nº Chamado"),
                             grid.Column("Situacao", header: "Situação"),
                             grid.Column("Escolha", header: "Problema"),
                             grid.Column("Detalhe", header: "Detalhes do problema"),
                             grid.Column("DataA", header: "Data de abertura"),
                             grid.Column("DataF", header: "Data de fechamento"),
                             grid.Column(format: (item) =>
                    Html.ActionLink("Detalhes", "detalhes",
                    new { NChamado = item.NChamado }))
                             ))


                    }
                    //Somente os abertos
                    else if ((Model.nchamado == 0) && (Model.status == 1) && (Model.ano == 0) && (Model.mes == 0))
                    {

                        WebGrid grid = new WebGrid(source: chamado.QAbertos(),
                                        rowsPerPage: 15,
                                        canPage: true,
                                        canSort: true,
                                        defaultSort: "os_nos"
                                        );

                        @grid.GetHtml(
                              tableStyle: "webgrid",
                              headerStyle: "head",
                              alternatingRowStyle: "alt",
                            columns: grid.Columns(
                                grid.Column("NChamado", header: "Nº Chamado"),
                                grid.Column("Situacao", header: "Situação"),
                                grid.Column("Escolha", header: "Problema"),
                                grid.Column("Detalhe", header: "Detalhes do problema"),
                                grid.Column("DataA", header: "Data de abertura"),
                                grid.Column("DataF", header: "Data de fechamento"),
                                 grid.Column(format: (item) =>
                    Html.ActionLink("Detalhes", "detalhes",
                    new { NChamado = item.NChamado }))))


                    }
                    //Somente os fechados
                    else if ((Model.nchamado == 0) && (Model.status == 2) && (Model.ano == 0) && (Model.mes == 0))
                    {

                        WebGrid grid = new WebGrid(source: chamado.QFechados(),
                                               rowsPerPage: 15,
                                               canPage: true,
                                               canSort: true,
                                               defaultSort: "os_nos"
                                               );

                        @grid.GetHtml(
                                     tableStyle: "webgrid",
                                     headerStyle: "head",
                                     alternatingRowStyle: "alt",
                                   columns: grid.Columns(
                                       grid.Column("NChamado", header: "Nº Chamado"),
                                       grid.Column("Situacao", header: "Situação"),
                                       grid.Column("Escolha", header: "Problema"),
                                       grid.Column("Detalhe", header: "Detalhes do problema"),
                                       grid.Column("DataA", header: "Data de abertura"),
                                       grid.Column("DataF", header: "Data de fechamento"),
                                        grid.Column(format: (item) =>
                    Html.ActionLink("Detalhes", "detalhes",
                    new { NChamado = item.NChamado }))))


                    }
                    //Somente abertos do mes
                    else if ((Model.nchamado == 0) && (Model.status == 1) && (Model.ano == 0) && (Model.mes != 0))
                    {

                        WebGrid grid = new WebGrid(source: chamado.QAbertoMes(Model.mes),
                                               rowsPerPage: 15,
                                               canPage: true,
                                               canSort: true,
                                               defaultSort: "os_nos"
                                               );

                        @grid.GetHtml(
                                     tableStyle: "webgrid",
                                     headerStyle: "head",
                                     alternatingRowStyle: "alt",
                                   columns: grid.Columns(
                                       grid.Column("NChamado", header: "Nº Chamado"),
                                       grid.Column("Situacao", header: "Situação"),
                                       grid.Column("Escolha", header: "Problema"),
                                       grid.Column("Detalhe", header: "Detalhes do problema"),
                                       grid.Column("DataA", header: "Data de abertura"),
                                       grid.Column("DataF", header: "Data de fechamento"),
                                        grid.Column(format: (item) =>
                    Html.ActionLink("Detalhes", "detalhes",
                    new { NChamado = item.NChamado }))))
                    }
                    //somente os fechados do mes
                    else if ((Model.nchamado == 0) && (Model.status == 2) && (Model.ano == 0) && (Model.mes != 0))
                    {

                        WebGrid grid = new WebGrid(source: chamado.QFechadosMes(Model.mes),
                                               rowsPerPage: 15,
                                               canPage: true,
                                               canSort: true,
                                               defaultSort: "os_nos"
                                               );

                        @grid.GetHtml(
                                    tableStyle: "webgrid",
                                     headerStyle: "head",
                                     alternatingRowStyle: "alt",
                                   columns: grid.Columns(
                                       grid.Column("NChamado", header: "Nº Chamado"),
                                       grid.Column("Situacao", header: "Situação"),
                                       grid.Column("Escolha", header: "Problema"),
                                       grid.Column("Detalhe", header: "Detalhes do problema"),
                                       grid.Column("DataA", header: "Data de abertura"),
                                       grid.Column("DataF", header: "Data de fechamento"),
                                        grid.Column(format: (item) =>
                    Html.ActionLink("Detalhes", "detalhes",
                    new { NChamado = item.NChamado }))))
                    }
                    //somente os abertos do mes do ano
                    else if ((Model.nchamado == 0) && (Model.status == 1) && (Model.ano != 0) && (Model.mes != 0))
                    {

                        WebGrid grid = new WebGrid(source: chamado.QAbertoMesAno(Model.mes, Model.ano),
                                               rowsPerPage: 15,
                                               canPage: true,
                                               canSort: true,
                                               defaultSort: "os_nos"
                                               );

                        @grid.GetHtml(
                                     tableStyle: "webgrid",
                                     headerStyle: "head",
                                     alternatingRowStyle: "alt",
                                   columns: grid.Columns(
                                       grid.Column("NChamado", header: "Nº Chamado"),
                                       grid.Column("Situacao", header: "Situação"),
                                       grid.Column("Escolha", header: "Problema"),
                                       grid.Column("Detalhe", header: "Detalhes do problema"),
                                       grid.Column("DataA", header: "Data de abertura"),
                                       grid.Column("DataF", header: "Data de fechamento"),
                                        grid.Column(format: (item) =>
                    Html.ActionLink("Detalhes", "detalhes",
                    new { NChamado = item.NChamado }))))
                    }
                    //somente os fechados do mes do ano
                    else if ((Model.nchamado == 0) && (Model.status == 2) && (Model.ano != 0) && (Model.mes != 0))
                    {

                        WebGrid grid = new WebGrid(source: chamado.QFechadoMesAno(Model.mes, Model.ano),
                                               rowsPerPage: 15,
                                               canPage: true,
                                               canSort: true,
                                               defaultSort: "os_nos"
                                               );

                        @grid.GetHtml(
                                     tableStyle: "webgrid",
                                     headerStyle: "head",
                                     alternatingRowStyle: "alt",
                                   columns: grid.Columns(
                                       grid.Column("NChamado", header: "Nº Chamado"),
                                       grid.Column("Situacao", header: "Situação"),
                                       grid.Column("Escolha", header: "Problema"),
                                       grid.Column("Detalhe", header: "Detalhes do problema"),
                                       grid.Column("DataA", header: "Data de abertura"),
                                       grid.Column("DataF", header: "Data de fechamento"),
                                        grid.Column(format: (item) =>
                    Html.ActionLink("Detalhes", "detalhes",
                    new { NChamado = item.NChamado }))))
                    }
                    //somente os abertos do ano
                    else if ((Model.nchamado == 0) && (Model.status == 1) && (Model.ano != 0) && (Model.mes == 0))
                    {

                        WebGrid grid = new WebGrid(source: chamado.QAbertosAno(Model.ano),
                                               rowsPerPage: 15,
                                               canPage: true,
                                               canSort: true,
                                               defaultSort: "os_nos"
                                               );

                        @grid.GetHtml(
                                     tableStyle: "webgrid",
                                     headerStyle: "head",
                                     alternatingRowStyle: "alt",
                                   columns: grid.Columns(
                                       grid.Column("NChamado", header: "Nº Chamado"),
                                       grid.Column("Situacao", header: "Situação"),
                                       grid.Column("Escolha", header: "Problema"),
                                       grid.Column("Detalhe", header: "Detalhes do problema"),
                                       grid.Column("DataA", header: "Data de abertura"),
                                       grid.Column("DataF", header: "Data de fechamento"),
                                        grid.Column(format: (item) =>
                    Html.ActionLink("Detalhes", "detalhes",
                    new { NChamado = item.NChamado }))))
                    }
                    //somente os fechados do ano
                    else if ((Model.nchamado == 0) && (Model.status == 2) && (Model.ano != 0) && (Model.mes == 0))
                    {
                        WebGrid grid = new WebGrid(source: chamado.QFechadosAno(Model.ano),
                                               rowsPerPage: 15,
                                               canPage: true,
                                               canSort: true,
                                               defaultSort: "os_nos"
                                               );

                        @grid.GetHtml(
                                     tableStyle: "webgrid",
                                     headerStyle: "head",
                                     alternatingRowStyle: "alt",
                                   columns: grid.Columns(
                                       grid.Column("NChamado", header: "Nº Chamado"),
                                       grid.Column("Situacao", header: "Situação"),
                                       grid.Column("Escolha", header: "Problema"),
                                       grid.Column("Detalhe", header: "Detalhes do problema"),
                                       grid.Column("DataA", header: "Data de abertura"),
                                       grid.Column("DataF", header: "Data de fechamento"),
                                        grid.Column(format: (item) =>
                    Html.ActionLink("Detalhes", "detalhes",
                    new { NChamado = item.NChamado }))))
                    }
                    //todos do mes do ano
                    else if ((Model.nchamado == 0) && (Model.status == 0) && (Model.ano != 0) && (Model.mes != 0))
                    {

                        WebGrid grid = new WebGrid(source: chamado.QTodosMesAno(Model.mes, Model.ano),
                                               rowsPerPage: 15,
                                               canPage: true,
                                               canSort: true,
                                               defaultSort: "os_nos"
                                               );

                        @grid.GetHtml(
                                     tableStyle: "webgrid",
                                     headerStyle: "head",
                                     alternatingRowStyle: "alt",
                                   columns: grid.Columns(
                                       grid.Column("NChamado", header: "Nº Chamado"),
                                       grid.Column("Situacao", header: "Situação"),
                                       grid.Column("Escolha", header: "Problema"),
                                       grid.Column("Detalhe", header: "Detalhes do problema"),
                                       grid.Column("DataA", header: "Data de abertura"),
                                       grid.Column("DataF", header: "Data de fechamento"),
                                        grid.Column(format: (item) =>
                    Html.ActionLink("Detalhes", "detalhes",
                    new { NChamado = item.NChamado }))))
                    }

                    //todos do mes
                    else if ((Model.nchamado == 0) && (Model.status == 0) && (Model.ano == 0) && (Model.mes != 0))
                    {

                        var grid = new WebGrid(source: chamado.QTodosMes(Model.mes),
                            rowsPerPage: 7,
                            canPage: true,
                            canSort: true,
                            defaultSort: "os_nos"
                            );

                        @grid.GetHtml(
                                     tableStyle: "webgrid",
                                     headerStyle: "head",
                                     alternatingRowStyle: "alt",
                                   columns: grid.Columns(
                                       grid.Column("NChamado", header: "Nº Chamado"),
                                       grid.Column("Situacao", header: "Situação"),
                                       grid.Column("Escolha", header: "Problema"),
                                       grid.Column("Detalhe", header: "Detalhes do problema"),
                                       grid.Column("DataA", header: "Data de abertura"),
                                       grid.Column("DataF", header: "Data de fechamento"),
                                        grid.Column(format: (item) =>
                    Html.ActionLink("Detalhes", "detalhes",
                    new { NChamado = item.NChamado }))))


                    }
                    //todos do ano
                    else if ((Model.nchamado == 0) && (Model.status == 0) && (Model.ano != 0) && (Model.mes == 0))
                    {

                        WebGrid grid = new WebGrid(source: chamado.QTodosAno(Model.ano),
                                                     rowsPerPage: 15,
                                                    canPage: true,
                                                    canSort: true,
                                                    defaultSort: "os_nos"
                                                    );

                        @grid.GetHtml(
                                     tableStyle: "webgrid",
                                     headerStyle: "head",
                                     alternatingRowStyle: "alt",
                                   columns: grid.Columns(
                                       grid.Column("NChamado", header: "Nº Chamado"),
                                       grid.Column("Situacao", header: "Situação"),
                                       grid.Column("Escolha", header: "Problema"),
                                       grid.Column("Detalhe", header: "Detalhes do problema"),
                                       grid.Column("DataA", header: "Data de abertura"),
                                       grid.Column("DataF", header: "Data de fechamento"),
                                        grid.Column(format: (item) =>
                    Html.ActionLink("Detalhes", "detalhes",
                    new { NChamado = item.NChamado }))))
                    }

                    //Todos em andamento
                    else if ((Model.nchamado == 0) && (Model.status == 3) && (Model.ano == 0) && (Model.mes == 0))
                    {

                        WebGrid grid = new WebGrid(source: chamado.QAndamento(),
                                                     rowsPerPage: 15,
                                                    canPage: true,
                                                    canSort: true,
                                                    defaultSort: "os_nos"
                                                    );

                        @grid.GetHtml(
                                     tableStyle: "webgrid",
                                     headerStyle: "head",
                                     alternatingRowStyle: "alt",
                                   columns: grid.Columns(
                                       grid.Column("NChamado", header: "Nº Chamado"),
                                       grid.Column("Situacao", header: "Situação"),
                                       grid.Column("Escolha", header: "Problema"),
                                       grid.Column("Detalhe", header: "Detalhes do problema"),
                                       grid.Column("DataA", header: "Data de abertura"),
                                       grid.Column("DataF", header: "Data de fechamento"),
                                        grid.Column(format: (item) =>
                    Html.ActionLink("Detalhes", "detalhes",
                    new { NChamado = item.NChamado }))))


                    }

                }

            </fieldset>

        </fieldset>

                    }

</body>
</html>

